[package]
name = "wrappers"
version = "0.1.18"
edition = "2021"

[lib]
crate-type = ["cdylib"]

[features]
default = ["cshim", "pg15"]
cshim = ["pgrx/cshim"]
pg14 = ["pgrx/pg14", "pgrx-tests/pg14", "supabase-wrappers/pg14"]
pg15 = ["pgrx/pg15", "pgrx-tests/pg15", "supabase-wrappers/pg15"]
pg16 = ["pgrx/pg16", "pgrx-tests/pg16", "supabase-wrappers/pg16"]
pg_test = []

helloworld_fdw = []
bigquery_fdw = [
    "gcp-bigquery-client",
    "serde_json",
    "serde",
    "wiremock",
    "futures",
    "yup-oauth2",
    "thiserror",
]
clickhouse_fdw = ["clickhouse-rs", "chrono", "chrono-tz", "regex", "thiserror"]
stripe_fdw = [
    "http",
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "serde_json",
    "thiserror",
    "url",
]
firebase_fdw = [
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "serde_json",
    "yup-oauth2",
    "regex",
    "thiserror",
]
s3_fdw = [
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "aws-config",
    "aws-sdk-s3",
    "aws-smithy-http",
    "aws-smithy-runtime-api",
    "tokio",
    "tokio-util",
    "csv",
    "async-compression",
    "serde_json",
    "http",
    "parquet",
    "futures",
    "arrow-array",
    "chrono",
    "thiserror",
]
airtable_fdw = [
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "serde_json",
    "serde",
    "url",
    "thiserror",
]
logflare_fdw = [
    "http",
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "serde_json",
    "thiserror",
    "url",
]
cnosdb_fdw = [
    "arrow",
    "arrow-flight",
    "prost-types",
    "tonic",
    "prost",
    "http-auth-basic",
    "base64",
    "thiserror",
    "tokio",
    "futures",
]

# Does not include helloworld_fdw because of its general uselessness
all_fdws = [
    "airtable_fdw",
    "bigquery_fdw",
    "clickhouse_fdw",
    "stripe_fdw",
    "firebase_fdw",
    "s3_fdw",
    "logflare_fdw",
    "cnosdb_fdw",
]

[dependencies]
pgrx = { version = "=0.10.2" }
#supabase-wrappers = "0.1"
supabase-wrappers = { path = "../supabase-wrappers", default-features = false }

# for clickhouse_fdw
clickhouse-rs = { git = "https://github.com/suharev7/clickhouse-rs", branch = "async-await", features = [
    "tls",
], optional = true }
chrono = { version = "0.4", optional = true }
chrono-tz = { version = "0.6", optional = true }

# for bigquery_fdw, firebase_fdw, airtable_fdw and etc.
gcp-bigquery-client = { version = "0.17.0", optional = true }
serde = { version = "1", optional = true }
serde_json = { version = "1.0.86", optional = true }
wiremock = { version = "0.5", optional = true }
futures = { version = "0.3", optional = true }

# for stripe_fdw, firebase_fdw, logflare_fdw and etc.
reqwest = { version = "0.11.20", features = ["json"], optional = true }
reqwest-middleware = { version = "0.2.3", optional = true }
reqwest-retry = { version = "0.2.2", optional = true }

# for firebase_fdw
yup-oauth2 = { version = "8.0.0", optional = true }
regex = { version = "1", optional = true }

# for airtable_fdw, stripe_fdw
url = { version = "2.3", optional = true }

# for s3_fdw
aws-config = { version = "0.56.1", optional = true }
aws-sdk-s3 = { version = "0.30.0", optional = true }
aws-smithy-http = { version = "0.56.1", optional = true }
aws-smithy-runtime-api = { version = "0.56.1", optional = true }
csv = { version = "1.2", optional = true }
tokio = { version = "1", features = ["full"], optional = true }
tokio-util = { version = "0.7", optional = true }
async-compression = { version = "0.3.15", features = [
    "tokio",
    "bzip2",
    "gzip",
    "xz",
    "zlib",
], optional = true }
http = { version = "0.2", optional = true }
parquet = { version = "41.0.0", features = ["async"], optional = true }
arrow-array = { version = "41.0.0", optional = true }

thiserror = { version = "1.0.48", optional = true }

# for cnosdb_fdw
arrow = {version = "42.0.0", features = ["prettyprint"], optional = true }
arrow-flight = {version = "42.0.0", features = ["flight-sql-experimental"], optional = true }
prost-types = { version = "0.11.9", optional = true }
tonic = { version = "0.9", optional = true }
prost = { version = "0.11.9", optional = true }
http-auth-basic = { version = "0.3.3", optional = true }
base64 = { version = "0.13.1", optional = true }

[dev-dependencies]
pgrx-tests = "=0.10.2"

[profile.dev]
panic = "unwind"
lto = "thin"

[profile.release]
panic = "unwind"
opt-level = 3
lto = "fat"
codegen-units = 1
